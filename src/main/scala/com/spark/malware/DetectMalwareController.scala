package com.spark.malware
import org.apache.spark.rdd.RDD

/**
  * Created by ram on 11/11/16.
  */

object DetectMalwareController {


   def main(args: Array[String]) {

     val inputFile = args(0)
     val outputFile = args(1)

     //Extract N-grams
     val NgramsCollection = ExtractFeatures.extractNgrams( inputFile )

     //select required features
     val featureVector = SelectFeatures.generateFeatureSet( NgramsCollection )

     //Build dataset with selectedFeatures
     val dataset = BuildDataset.buildDataSet(NgramsCollection, featureVector)

     //convert data to set of labeled points for training model
     val labeledPoints = Utilities.convertDataToLabeledPoints(dataset)

     //split the input data
     val Array(trainingData, testData) = Utilities.getDataSplit(labeledPoints)

     //set model type : Decision Tree, SVM ,Random Forest
     //BuildModel.setModelType(Constants.DECISION_TREE)

     //train Model
     val model = BuildModel.train(trainingData)

     //predict the test data and compute Accuracy
     val labelAndPreds = PredictClass.predict(model, testData)

     //print Metrics
     PredictClass.computeAndPrintMetrics(labelAndPreds)
  }

}
